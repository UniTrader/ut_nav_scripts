<?xml version="1.0" encoding="UTF-8"?>
<diff xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts-diff.xsd">
  <add sel="/aiscript/attention/actions" pos="prepend">
    <do_if value="this.ship.iscapitalship and not this.$timelogging?">
      <do_if value="not this.$timelogging? and ($destination.isclass.cluster or $destination.isclass.sector or $destination.isclass.zone or $destination.isclass.station)">
        <set_value name="this.$timelogging" exact="player.age"/>
        <set_value name="$logging_start" exact="this.zone"/>
        <do_if value="$destination.isclass.station">
        <set_value name="$logging_destination" exact="$destination.zone"/>
        </do_if>
        <do_else>
          <set_value name="$logging_destination" exact="$destination"/>
         </do_else>
      </do_if>
      <do_if value="this.owner != faction.player and this.seed % 2 == 1">
        <set_value name="this.$timelogging" exact="player.age"/>
        <run_script name="'ut.cac.move.generic'">
          <param name="destination" value="$destination" comment="can be a space or an object in a zone. Providing Sector and Cluster will attempt to find the nearest zone"/>
          <param name="position" value="$position" comment="position is treated as an offset to destination. Default: safe position on [0,0,0] of destination"/>
          <param name="rotation" value="$rotation" comment="rotation the ship should have - overridden by lookat"/>
          <param name="lookat" value="$lookat" comment="position the ship should point to - overrides rotation"/>
          <param name="endintargetspace" value="$endintargetzone" comment="complete this script if we have the correct Space context, no matter where (may be Cluster, Sector or Zone, will resolve to Zone if an Object is the destination)"/>
          <!--
        <param name="noboost" default="false" type="internal" text="{1041, 10077}" comment="No boosting. set true to prevent ships boosting"/>
        <param name="disablecollisionavoidance" type="internal" default="false" text="{1041, 10028}" comment="Disable collision avoidance. HACK - disable collision-avoidance for this ship"/>
        <param name="abortpath" default="true" type="internal" text="{1041, 10000}" comment="Abort path. disable aborting existing path"/>
        <param name="forcesteering" default="false" type="internal" text="{1041, 10154}" comment="Force steering. force steering flight control model"/>-->
        </run_script>
        <debug_to_file name="'%1 %2 -%3 %4 -UT.txt'.[$logging_start,$logging_start.sector.knownname,$logging_destination,if $logging_destination.isclass.zone then $logging_destination.sector.knownname else $logging_destination.knownname]" directory="'navscripts'" text="(player.age - this.$timelogging).formatted.default"/>
        
        <remove_value name="this.$timelogging"/>
        <remove_value name="$logtimetable"/>
      </do_if>
    </do_if>
  </add>
  <add sel="//on_abort">
    <do_if value="this.$timelogging? and $logging_start? and $logging_destination?">
      <remove_value name="this.$timelogging"/>
    </do_if>
  </add>
  <add sel="//return" pos="before">
    <do_if value="this.$timelogging? and $logging_start? and $logging_destination?">
      <do_if value="$returnvalue">
        <debug_to_file name="'%1 %2 -%3 %4 -EGO.txt'.[$logging_start,$logging_start.sector.knownname,$logging_destination,if $logging_destination.isclass.zone then $logging_destination.sector.knownname else $logging_destination.knownname]" directory="'navscripts'" text="(player.age - this.$timelogging).formatted.default"/>
      </do_if>
      <remove_value name="this.$timelogging"/>
    </do_if>
  </add>
</diff>
